# Path Item Objects for Lecturer Thesis Guidance endpoints

lecturer_my_students:
  get:
    tags: [LecturerThesisGuidance]
    summary: Lecturer - My supervised students
    security: [{ bearerAuth: [] }]
    parameters:
      - in: query
        name: roles
        required: false
        schema:
          type: string
        description: Comma-separated ThesisRole filter (e.g., SUPERVISOR_1,EXAMINER_1); defaults to SUPERVISOR_1,SUPERVISOR_2
    responses:
      "200":
        description: List of supervised students
        content:
          application/json:
            schema:
              type: object
              properties:
                success: { type: boolean }
                count: { type: integer }
                students:
                  type: array
                  items:
                    $ref: "../openapi.yaml#/components/schemas/MyStudentItem"
  "401": { $ref: "../openapi.yaml#/components/responses/Unauthorized" }
  "403": { $ref: "../openapi.yaml#/components/responses/Forbidden" }

lecturer_requests:
  get:
    tags: [LecturerThesisGuidance]
    summary: Lecturer - Pending guidance requests
    security: [{ bearerAuth: [] }]
    responses:
      "200":
        description: Requests
        content:
          application/json:
            schema:
              type: object
              properties:
                success: { type: boolean }
                count: { type: integer }
                requests:
                  type: array
                  items:
                    $ref: "../openapi.yaml#/components/schemas/GuidanceItem"
  "401": { $ref: "../openapi.yaml#/components/responses/Unauthorized" }
  "403": { $ref: "../openapi.yaml#/components/responses/Forbidden" }

lecturer_requests_reject:
  patch:
    tags: [LecturerThesisGuidance]
    summary: Lecturer - Reject guidance request
    security: [{ bearerAuth: [] }]
    parameters:
      - in: path
        name: guidanceId
        required: true
        schema: { type: string }
    requestBody:
      required: true
      content:
        application/json:
          schema: { $ref: "../openapi.yaml#/components/schemas/FeedbackBody" }
    responses:
      "200":
        description: Rejected
        content:
          application/json:
            schema:
              type: object
              properties:
                success: { type: boolean }
                guidance: { $ref: "../openapi.yaml#/components/schemas/GuidanceItem" }
      "400": { $ref: "../openapi.yaml#/components/responses/BadRequest" }
      "401": { $ref: "../openapi.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../openapi.yaml#/components/responses/Forbidden" }
      "404": { $ref: "../openapi.yaml#/components/responses/BadRequest" }

lecturer_requests_approve:
  patch:
    tags: [LecturerThesisGuidance]
    summary: Lecturer - Approve guidance request
    security: [{ bearerAuth: [] }]
    parameters:
      - in: path
        name: guidanceId
        required: true
        schema: { type: string }
    requestBody:
      required: false
      content:
        application/json:
          schema: { $ref: "../openapi.yaml#/components/schemas/ApproveGuidanceBody" }
    responses:
      "200":
        description: Approved
        content:
          application/json:
            schema:
              type: object
              properties:
                success: { type: boolean }
                guidance: { $ref: "../openapi.yaml#/components/schemas/GuidanceItem" }
      "400": { $ref: "../openapi.yaml#/components/responses/BadRequest" }
      "401": { $ref: "../openapi.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../openapi.yaml#/components/responses/Forbidden" }
      "404": { $ref: "../openapi.yaml#/components/responses/BadRequest" }

lecturer_progress:
  get:
    tags: [LecturerThesisGuidance]
    summary: Lecturer - Progress summary of supervised students
    security: [{ bearerAuth: [] }]
    responses:
      "200":
        description: Summary
        content:
          application/json:
            schema:
              type: object
              properties:
                success: { type: boolean }
                totalComponents: { type: integer }
                items:
                  type: array
                  items: { $ref: "../openapi.yaml#/components/schemas/ProgressSummaryItem" }
      "401": { $ref: "../openapi.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../openapi.yaml#/components/responses/Forbidden" }

lecturer_progress_detail:
  get:
    tags: [LecturerThesisGuidance]
    summary: Lecturer - Progress detail for a student
    security: [{ bearerAuth: [] }]
    parameters:
      - in: path
        name: studentId
        required: true
        schema: { type: string }
    responses:
      "200":
        description: Detail
        content:
          application/json:
            schema:
              type: object
              properties:
                success: { type: boolean }
                thesisId: { type: string }
                components:
                  type: array
                  items: { $ref: "../openapi.yaml#/components/schemas/ProgressDetailItem" }
      "401": { $ref: "../openapi.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../openapi.yaml#/components/responses/Forbidden" }
      "404": { $ref: "../openapi.yaml#/components/responses/BadRequest" }

lecturer_progress_approve_components:
  patch:
    tags: [LecturerThesisGuidance]
    summary: Lecturer - Validate progress components
    security: [{ bearerAuth: [] }]
    parameters:
      - in: path
        name: studentId
        required: true
        schema: { type: string }
    requestBody:
      required: true
      content:
        application/json:
          schema: { $ref: "../openapi.yaml#/components/schemas/ApproveComponentsBody" }
    responses:
      "200":
        description: Updated
        content:
          application/json:
            schema:
              type: object
              properties:
                success: { type: boolean }
                thesisId: { type: string }
                updated: { type: integer }
                created: { type: integer }
  "400": { $ref: "../openapi.yaml#/components/responses/BadRequest" }
  "401": { $ref: "../openapi.yaml#/components/responses/Unauthorized" }
  "403": { $ref: "../openapi.yaml#/components/responses/Forbidden" }

lecturer_feedback:
  post:
    tags: [LecturerThesisGuidance]
    summary: Lecturer - Provide feedback for a guidance session
    security: [{ bearerAuth: [] }]
    parameters:
      - in: path
        name: guidanceId
        required: true
        schema: { type: string }
    requestBody:
      required: true
      content:
        application/json:
          schema: { $ref: "../openapi.yaml#/components/schemas/FeedbackBody" }
    responses:
      "200":
        description: Posted
        content:
          application/json:
            schema:
              type: object
              properties:
                success: { type: boolean }
                guidance: { $ref: "../openapi.yaml#/components/schemas/GuidanceItem" }
      "400": { $ref: "../openapi.yaml#/components/responses/BadRequest" }
      "401": { $ref: "../openapi.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../openapi.yaml#/components/responses/Forbidden" }
      "404": { $ref: "../openapi.yaml#/components/responses/BadRequest" }

lecturer_final_approval:
  patch:
    tags: [LecturerThesisGuidance]
    summary: Lecturer - Final approve (100%)
    security: [{ bearerAuth: [] }]
    parameters:
      - in: path
        name: studentId
        required: true
        schema: { type: string }
    responses:
      "200":
        description: Approved
        content:
          application/json:
            schema:
              type: object
              properties:
                success: { type: boolean }
                thesisId: { type: string }
                approved: { type: boolean }
  "400": { $ref: "../openapi.yaml#/components/responses/BadRequest" }
  "401": { $ref: "../openapi.yaml#/components/responses/Unauthorized" }
  "403": { $ref: "../openapi.yaml#/components/responses/Forbidden" }
  "404": { $ref: "../openapi.yaml#/components/responses/BadRequest" }

lecturer_fail_thesis:
  patch:
    tags: [LecturerThesisGuidance]
    summary: Lecturer - Fail thesis (stop supervising) if status is at_risk
    description: Marks the student's active thesis as failed when current status is at_risk.
    security: [{ bearerAuth: [] }]
    parameters:
      - in: path
        name: studentId
        required: true
        schema: { type: string }
    requestBody:
      required: false
      content:
        application/json:
          schema: { $ref: "../openapi.yaml#/components/schemas/FailThesisBody" }
    responses:
      "200":
        description: Failed
        content:
          application/json:
            schema:
              type: object
              properties:
                success: { type: boolean }
                thesisId: { type: string }
                status: { type: string, example: failed }
      "400": { $ref: "../openapi.yaml#/components/responses/BadRequest" }
      "401": { $ref: "../openapi.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../openapi.yaml#/components/responses/Forbidden" }
      "404": { $ref: "../openapi.yaml#/components/responses/BadRequest" }

lecturer_guidance_history:
  get:
    tags: [LecturerThesisGuidance]
    summary: Lecturer - Guidance history (optional)
    security: [{ bearerAuth: [] }]
    parameters:
      - in: path
        name: studentId
        required: true
        schema: { type: string }
    responses:
      "200":
        description: History
        content:
          application/json:
            schema:
              type: object
              properties:
                success: { type: boolean }
                count: { type: integer }
                items:
                  type: array
                  items: { $ref: "../openapi.yaml#/components/schemas/GuidanceItem" }
      "401": { $ref: "../openapi.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../openapi.yaml#/components/responses/Forbidden" }

lecturer_activity_log:
  get:
    tags: [LecturerThesisGuidance]
    summary: Lecturer - Activity log (optional)
    security: [{ bearerAuth: [] }]
    parameters:
      - in: path
        name: studentId
        required: true
        schema: { type: string }
    responses:
      "200":
        description: Logs
        content:
          application/json:
            schema:
              type: object
              properties:
                success: { type: boolean }
                count: { type: integer }
                items:
                  type: array
                  items: { $ref: "../openapi.yaml#/components/schemas/ActivityLogItem" }
      "401": { $ref: "../openapi.yaml#/components/responses/Unauthorized" }
      "403": { $ref: "../openapi.yaml#/components/responses/Forbidden" }

lecturer_supervisor_eligibility:
  get:
    tags: [LecturerThesisGuidance]
    summary: Lecturer - Check eligibility to be SUPERVISOR_1
    description: Returns whether the lecturer has graduated enough students as SUPERVISOR_2.
    security: [{ bearerAuth: [] }]
    parameters:
      - in: query
        name: threshold
        required: false
        schema: { type: integer, default: 4 }
        description: Override required number of SUPERVISOR_2 graduations
    responses:
      "200":
        description: Eligibility result
        content:
          application/json:
            schema:
              type: object
              properties:
                success: { type: boolean }
                eligible: { type: boolean }
                graduatedAsSup2: { type: integer }
                required: { type: integer }
  "401": { $ref: "../openapi.yaml#/components/responses/Unauthorized" }
  "403": { $ref: "../openapi.yaml#/components/responses/Forbidden" }
