# Path Item Objects for Auth endpoints
# Each key below is a Path Item Object referenced from the root OpenAPI under paths via $ref

auth_login:
  post:
    tags: [Auth]
    summary: Login with email and password
    operationId: authLogin
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "../openapi.yaml#/components/schemas/LoginRequest"
          example:
            email: user@example.com
            password: password123
    responses:
      "200":
        description: Login success
        content:
          application/json:
            schema:
              $ref: "../openapi.yaml#/components/schemas/LoginResponse"
      "400":
        $ref: "../openapi.yaml#/components/responses/BadRequest"
      "401":
        $ref: "../openapi.yaml#/components/responses/Unauthorized"
      "500":
        $ref: "../openapi.yaml#/components/responses/InternalError"

auth_refresh:
  post:
    tags: [Auth]
    summary: Refresh access token
    operationId: authRefresh
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "../openapi.yaml#/components/schemas/RefreshRequest"
          example:
            refreshToken: <refresh-token>
    responses:
      "200":
        description: New tokens issued
        content:
          application/json:
            schema:
              $ref: "../openapi.yaml#/components/schemas/RefreshResponse"
      "400":
        $ref: "../openapi.yaml#/components/responses/BadRequest"
      "401":
        $ref: "../openapi.yaml#/components/responses/Unauthorized"
      "500":
        $ref: "../openapi.yaml#/components/responses/InternalError"

auth_me:
  get:
    tags: [Auth]
    summary: Get current user info (from access token)
    operationId: authMe
    security:
      - bearerAuth: []
    responses:
      "200":
        description: Current user
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                user:
                  type: object
                  description: JWT payload
                  additionalProperties: true
      "401":
        $ref: "../openapi.yaml#/components/responses/Unauthorized"
      "500":
        $ref: "../openapi.yaml#/components/responses/InternalError"

auth_logout:
  post:
    tags: [Auth]
    summary: Logout (revoke refresh token)
    operationId: authLogout
    security:
      - bearerAuth: []
    responses:
      "200":
        description: Logged out
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
      "401":
        $ref: "../openapi.yaml#/components/responses/Unauthorized"
      "500":
        $ref: "../openapi.yaml#/components/responses/InternalError"

auth_password:
  patch:
    tags: [Auth]
    summary: Change password
    operationId: authChangePassword
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "../openapi.yaml#/components/schemas/ChangePasswordRequest"
          example:
            currentPassword: oldpass123
            newPassword: newpass456
    responses:
      "200":
        description: Password changed
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
      "400":
        $ref: "../openapi.yaml#/components/responses/BadRequest"
      "401":
        $ref: "../openapi.yaml#/components/responses/Unauthorized"
      "500":
        $ref: "../openapi.yaml#/components/responses/InternalError"

auth_reset_request:
  post:
    tags: [Auth]
    summary: Request password reset (send email)
    operationId: authResetRequest
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required: [email]
            properties:
              email:
                type: string
                format: email
          example:
            email: user@example.com
    responses:
      "200":
        description: Email sent (or ignored to avoid enumeration)
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
      "400":
        $ref: "../openapi.yaml#/components/responses/BadRequest"
      "500":
        $ref: "../openapi.yaml#/components/responses/InternalError"

auth_reset_verify:
  get:
    tags: [Auth]
    summary: Verify password reset token
    operationId: authResetVerify
    parameters:
      - in: query
        name: token
        schema:
          type: string
        required: true
    responses:
      "200":
        description: Token is valid
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                tokenValid:
                  type: boolean
                  example: true
                sub:
                  type: string
      "400":
        $ref: "../openapi.yaml#/components/responses/BadRequest"
      "500":
        $ref: "../openapi.yaml#/components/responses/InternalError"

auth_reset_confirm:
  post:
    tags: [Auth]
    summary: Reset password with token
    operationId: authResetConfirm
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required: [token, newPassword]
            properties:
              token:
                type: string
              newPassword:
                type: string
          example:
            token: <token>
            newPassword: newpass123
    responses:
      "200":
        description: Password updated
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
      "400":
        $ref: "../openapi.yaml#/components/responses/BadRequest"
      "500":
        $ref: "../openapi.yaml#/components/responses/InternalError"

auth_verify_request:
  post:
    tags: [Auth]
    summary: Request account activation email
    description: |
      User-initiated account activation. If the email exists and is not verified, the server sends an activation link to the email.
      If the account does not yet have a password, a temporary password will be generated and included in the email.
      The response is success; server may include a helpful message and code without revealing sensitive info.
    operationId: requestAccountActivation
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required: [email]
            properties:
              email:
                type: string
                format: email
          example:
            email: user@example.com
    responses:
      "200":
        description: Request accepted
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  nullable: true
                  description: Optional human-friendly message (e.g., email not found or already verified)
                code:
                  type: string
                  nullable: true
                  description: Optional code (e.g., EMAIL_NOT_FOUND, ALREADY_VERIFIED)
            examples:
              accepted:
                summary: Email sent when account exists and not verified
                value:
                  success: true
              notFound:
                summary: Email not found (frontend can show guidance to contact admin)
                value:
                  success: true
                  message: "Email tidak terdaftar. Silakan hubungi admin untuk aktivasi akun."
                  code: EMAIL_NOT_FOUND
              alreadyVerified:
                summary: Email already verified
                value:
                  success: true
                  message: "Akun sudah terverifikasi."
                  code: ALREADY_VERIFIED
